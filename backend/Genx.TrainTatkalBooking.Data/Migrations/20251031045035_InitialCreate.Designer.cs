// <auto-generated />
using System;
using Genx.TrainTatkalBooking.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Genx.TrainTatkalBooking.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251031045035_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Genx.TrainTatkalBooking.Data.Model.BookingDetail", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<int>("AllocatedClass")
                        .HasColumnType("int");

                    b.Property<int>("CoachId")
                        .HasColumnType("int");

                    b.Property<int>("PassengerId")
                        .HasColumnType("int");

                    b.Property<int>("RequestedClass")
                        .HasColumnType("int");

                    b.Property<int>("TatkalUsers")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalCharge")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TrainId")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.HasIndex("CoachId");

                    b.HasIndex("PassengerId")
                        .IsUnique();

                    b.HasIndex("TrainId");

                    b.ToTable("BookingDetails");
                });

            modelBuilder.Entity("Genx.TrainTatkalBooking.Data.Model.Coach", b =>
                {
                    b.Property<int>("CoachId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CoachId"));

                    b.Property<decimal>("BaseFare")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ClassType")
                        .HasColumnType("int");

                    b.Property<string>("CoachName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("TatkalPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalSeats")
                        .HasColumnType("int");

                    b.Property<int>("TotalTatkalSeats")
                        .HasColumnType("int");

                    b.Property<int>("TrainId")
                        .HasColumnType("int");

                    b.HasKey("CoachId");

                    b.HasIndex("TrainId");

                    b.ToTable("Coaches");
                });

            modelBuilder.Entity("Genx.TrainTatkalBooking.Data.Model.Passenger", b =>
                {
                    b.Property<int>("PassengerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PassengerId"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("CoachId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("PassengerId");

                    b.HasIndex("CoachId");

                    b.ToTable("Passengers");
                });

            modelBuilder.Entity("Genx.TrainTatkalBooking.Data.Model.Train", b =>
                {
                    b.Property<int>("TrainId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("TrainId"));

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TrainName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("TravelDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("TrainId");

                    b.ToTable("Trains");
                });

            modelBuilder.Entity("Genx.TrainTatkalBooking.Data.Model.BookingDetail", b =>
                {
                    b.HasOne("Genx.TrainTatkalBooking.Data.Model.Coach", "Coach")
                        .WithMany("BookingDetails")
                        .HasForeignKey("CoachId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Genx.TrainTatkalBooking.Data.Model.Passenger", "Passenger")
                        .WithOne("BookingDetails")
                        .HasForeignKey("Genx.TrainTatkalBooking.Data.Model.BookingDetail", "PassengerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Genx.TrainTatkalBooking.Data.Model.Train", "Train")
                        .WithMany("BookingDetails")
                        .HasForeignKey("TrainId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Coach");

                    b.Navigation("Passenger");

                    b.Navigation("Train");
                });

            modelBuilder.Entity("Genx.TrainTatkalBooking.Data.Model.Coach", b =>
                {
                    b.HasOne("Genx.TrainTatkalBooking.Data.Model.Train", "Train")
                        .WithMany("Coaches")
                        .HasForeignKey("TrainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Train");
                });

            modelBuilder.Entity("Genx.TrainTatkalBooking.Data.Model.Passenger", b =>
                {
                    b.HasOne("Genx.TrainTatkalBooking.Data.Model.Coach", "Coach")
                        .WithMany("Passengers")
                        .HasForeignKey("CoachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coach");
                });

            modelBuilder.Entity("Genx.TrainTatkalBooking.Data.Model.Coach", b =>
                {
                    b.Navigation("BookingDetails");

                    b.Navigation("Passengers");
                });

            modelBuilder.Entity("Genx.TrainTatkalBooking.Data.Model.Passenger", b =>
                {
                    b.Navigation("BookingDetails")
                        .IsRequired();
                });

            modelBuilder.Entity("Genx.TrainTatkalBooking.Data.Model.Train", b =>
                {
                    b.Navigation("BookingDetails");

                    b.Navigation("Coaches");
                });
#pragma warning restore 612, 618
        }
    }
}
